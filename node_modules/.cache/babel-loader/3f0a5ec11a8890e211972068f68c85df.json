{"ast":null,"code":"import _slicedToArray from \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport moment from 'moment'; //function Clock\n// function startButton(props){\n//         return(\n//         <button onClick={this.props.handleStart} className=\"startButton\"> START </button>\n//         );\n// }\n//\n// function twoButtons(props){\n//     let makeLapse = () => {\n//         this.props.onLap({\n//             id: this.props.idLapse + 1,\n//             end_time: \"tatata\",\n//             duration: \"tatata\",\n//         });\n//     };\n//\n//         return (\n//     (this.props.resume === true)? <div><button>STOP</button><button onClick={this.makeLapse}>LAP</button></div>\n//     : <div><button>RESUME</button><button onClick={this.props.onReset}>RESET</button></div>\n//     );\n// }\n\nfunction LapsesTable() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        start = _useState2[0],\n        setStart = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stop = _useState4[0],\n        setStop = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        resume = _useState6[0],\n        setResume = _useState6[1]; // const [idLapse, setIdLapse] = useState(0);\n  //\n  // const [lapses, setLapses] = useState([]);\n  //\n  // let Lap = lapse => {\n  //     setIdLapse(idLapse + 1);\n  //     setLapses([lapse, ...lapses]);\n  // };\n\n  /* let handleReset = () => {\r\n       setStart(false);\r\n       setStop(false);\r\n       setResume(false);\r\n       setIdLapse(0);\r\n       setLapses([]);\r\n   };*/\n\n  /*return (\r\n      ({start} === false ?\r\n          <div>\r\n              <startButton onClick={() => setStart(!start)}/>\r\n          </div> :\r\n          <div>\r\n              <twoButtons onReset={() => this.handleReset()}\r\n                          onLap={() => this.Lap()} idLapse={idLapse}\r\n                />\r\n              <div className={LapsesList}>\r\n                  <hr/>\r\n                  {lapses.map(lapse => (\r\n                      <Lapse\r\n                          key={lapse.id}\r\n                          lapse={lapse}\r\n                      />\r\n                  ))}\r\n              </div>\r\n          </div>)\r\n  );*/\n\n}\n\n;\n\nfunction twoButtons(props) {\n  let makeLapse = () => {\n    this.props.onLap({\n      id: this.props.idLapse + 1,\n      end_time: \"tatata\",\n      duration: \"tatata\"\n    });\n  };\n\n  return this.props.resume === true ? React.createElement(\"div\", {\n    className: \"twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"stopButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"STOP\"), React.createElement(\"button\", {\n    onClick: this.makeLapse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"LAP\")) : React.createElement(\"div\", {\n    className: \"twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"RESUME\"), React.createElement(\"button\", {\n    onClick: this.props.onReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"RESET\"));\n}\n\nfunction Lapse(props) {\n  return React.createElement(\"div\", {\n    className: \"Lapse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, props.lapse.id), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, props.lapse.end_time), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, props.lapse.duration), \"/* \", React.createElement(\"button\", {\n    onClick: props.onDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"x\"), \"*/\");\n}\n\nfunction LapsesList(props) {\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        lapses = _useState8[0],\n        setLapses = _useState8[1];\n\n  let addLapse = lapse => {\n    setLapses([lapse, ...lapses]);\n  };\n\n  return React.createElement(\"div\", {\n    className: LapsesList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), lapses.map((lapse, index) => React.createElement(Lapse, {\n    key: index,\n    end_time: lapse.end_time,\n    duration: lapse.duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })));\n}\n\nfunction Timer(props) {\n  const _useState9 = useState(moment.duration(props.interval)),\n        _useState10 = _slicedToArray(_useState9, 2),\n        duration = _useState10[0],\n        setDuration = _useState10[1];\n\n  const milliseconds = Math.round(duration.milliseconds() / 10);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, duration.minutes(), \":\", duration.seconds(), \".\", milliseconds);\n}\n\nfunction StartButton(props) {\n  return React.createElement(\"button\", {\n    onClick: props.onStart,\n    className: \"startButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \" START \");\n}\n\nfunction Button(props) {\n  return React.createElement(\"button\", {\n    className: props.class,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, props.title);\n}\n\nfunction App() {\n  const _useState11 = useState(1234567),\n        _useState12 = _slicedToArray(_useState11, 2),\n        timer = _useState12[0],\n        setTimer = _useState12[1];\n\n  const _useState13 = useState(0),\n        _useState14 = _slicedToArray(_useState13, 2),\n        idLapse = _useState14[0],\n        setIdLapse = _useState14[1];\n\n  const _useState15 = useState([12345, 2345, 34567, 98765]),\n        _useState16 = _slicedToArray(_useState15, 2),\n        lapses = _useState16[0],\n        setLapses = _useState16[1]; //const [lapses, setLapses] = useState([]);\n\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        isStarted = _useState18[0],\n        setStart = _useState18[1]; // const [stop, setStop] = useState(false);\n\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        resume = _useState20[0],\n        setResume = _useState20[1];\n\n  let Lap = lapse => {\n    setIdLapse(idLapse + 1);\n    setLapses([lapse, ...lapses]);\n  }; // let handleReset = () => {\n  //     setStart(false);\n  //     setStop(false);\n  //     setResume(false);\n  //     setIdLapse(0);\n  //     setLapses([]);\n  // };\n\n\n  let handleStart = () => {\n    setStart(!isStarted);\n  }; // let buttons = () => {\n  //     if (true) {\n  //         {\n  //          return (<div>\n  //                 <startButton onStart={() => handleStart()}/>\n  //             </div>);\n  //         }\n  //     }\n  //     else {\n  //         return (<div>\n  //             <twoButtons resume={resume} onReset={() => this.handleReset()}\n  //                         onLap={() => this.Lap()} idLapse={idLapse}\n  //             />\n  //         </div>);\n  //     }\n  // };\n  // let buttons = () => {\n  //     if (true) {\n  //         return (<div>\n  //             <twoButtons resume={resume} onReset={() => this.handleReset()}\n  //                         onLap={() => this.Lap()} idLapse={idLapse}\n  //             />\n  //         </div>);\n  //     } else {\n  //         return (<div>\n  //             <startButton onStart={() => handleStart()}/>\n  //         </div>);\n  //     }\n  // };\n\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Timer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Timer, {\n    interval: timer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"Buttons twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(Button, {\n    class: \"startButton\",\n    title: \"START\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }), React.createElement(Button, {\n    class: \"resetButton\",\n    title: \"RESET\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  })));\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 232\n  },\n  __self: this\n}), document.getElementById(\"root\"));\n/*//import logo from \"../logo.svg\"*/","map":{"version":3,"sources":["C:\\Элия\\React\\my-app\\src\\index.js"],"names":["React","useState","useEffect","ReactDOM","moment","LapsesTable","start","setStart","stop","setStop","resume","setResume","twoButtons","props","makeLapse","onLap","id","idLapse","end_time","duration","onReset","Lapse","lapse","onDelete","LapsesList","lapses","setLapses","addLapse","map","index","Timer","interval","setDuration","milliseconds","Math","round","minutes","seconds","StartButton","onStart","Button","class","title","App","timer","setTimer","setIdLapse","isStarted","Lap","handleStart","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport moment from 'moment';\r\n\r\n//function Clock\r\n\r\n// function startButton(props){\r\n//         return(\r\n//         <button onClick={this.props.handleStart} className=\"startButton\"> START </button>\r\n//         );\r\n// }\r\n//\r\n// function twoButtons(props){\r\n//     let makeLapse = () => {\r\n//         this.props.onLap({\r\n//             id: this.props.idLapse + 1,\r\n//             end_time: \"tatata\",\r\n//             duration: \"tatata\",\r\n//         });\r\n//     };\r\n//\r\n//         return (\r\n//     (this.props.resume === true)? <div><button>STOP</button><button onClick={this.makeLapse}>LAP</button></div>\r\n//     : <div><button>RESUME</button><button onClick={this.props.onReset}>RESET</button></div>\r\n//     );\r\n// }\r\n\r\nfunction LapsesTable() {\r\n    const [start, setStart] = useState(false);\r\n    const [stop, setStop] = useState(false);\r\n    const [resume, setResume] = useState(false);\r\n\r\n    // const [idLapse, setIdLapse] = useState(0);\r\n    //\r\n    // const [lapses, setLapses] = useState([]);\r\n    //\r\n    // let Lap = lapse => {\r\n    //     setIdLapse(idLapse + 1);\r\n    //     setLapses([lapse, ...lapses]);\r\n    // };\r\n\r\n   /* let handleReset = () => {\r\n        setStart(false);\r\n        setStop(false);\r\n        setResume(false);\r\n        setIdLapse(0);\r\n        setLapses([]);\r\n    };*/\r\n\r\n    /*return (\r\n        ({start} === false ?\r\n            <div>\r\n                <startButton onClick={() => setStart(!start)}/>\r\n            </div> :\r\n            <div>\r\n                <twoButtons onReset={() => this.handleReset()}\r\n                            onLap={() => this.Lap()} idLapse={idLapse}\r\n\r\n                />\r\n                <div className={LapsesList}>\r\n                    <hr/>\r\n                    {lapses.map(lapse => (\r\n                        <Lapse\r\n                            key={lapse.id}\r\n                            lapse={lapse}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>)\r\n    );*/\r\n};\r\n\r\nfunction twoButtons(props){\r\n    let makeLapse = () => {\r\n        this.props.onLap({\r\n            id: this.props.idLapse + 1,\r\n            end_time: \"tatata\",\r\n            duration: \"tatata\",\r\n        });\r\n    };\r\n\r\n    return (\r\n        (this.props.resume === true)?\r\n            <div className=\"twoButtons\">\r\n                <button className=\"stopButton\">STOP</button>\r\n                <button onClick={this.makeLapse}>LAP</button>\r\n            </div>\r\n            :\r\n            <div className=\"twoButtons\">\r\n                <button>RESUME</button>\r\n                <button onClick={this.props.onReset}>RESET</button>\r\n            </div>\r\n    );\r\n}\r\n\r\nfunction Lapse(props){\r\n    return (\r\n        <div className=\"Lapse\">\r\n            {/*<div*/}\r\n            {/*    onClick={props.toggleComplete}*/}\r\n            {/*>*/}\r\n            <span>{props.lapse.id}</span>\r\n            <span>{props.lapse.end_time}</span>\r\n            <span>{props.lapse.duration}</span>\r\n\r\n            {/*<span>01</span>*/}\r\n            {/*<span>02</span>*/}\r\n            {/*<span>{props.lap.duration}</span>*/}\r\n            {/*</div>*/}\r\n            /* <button onClick={props.onDelete}>x</button>*/\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction LapsesList(props) {\r\n    const [lapses, setLapses] = useState([]);\r\n\r\n    let addLapse = lapse => {\r\n        setLapses([lapse,...lapses]);\r\n    };\r\n\r\n    return (\r\n        <div className={LapsesList}>\r\n            <hr/>\r\n            {lapses.map((lapse, index) => (\r\n                <Lapse\r\n                    key = {index}\r\n                    end_time = {lapse.end_time}\r\n                    duration = {lapse.duration}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Timer(props){\r\n    const [duration, setDuration] = useState(moment.duration(props.interval));\r\n    const milliseconds = Math.round(duration.milliseconds()/10);\r\n    return (\r\n        <div>{duration.minutes()}:{duration.seconds()}.{milliseconds}</div>\r\n    )\r\n}\r\n\r\nfunction StartButton(props){\r\n    return(\r\n        <button onClick={props.onStart} className=\"startButton\"> START </button>\r\n    );\r\n}\r\n\r\nfunction Button(props){\r\n    return(\r\n        <button className={props.class}>{props.title}</button>\r\n    )\r\n}\r\n\r\nfunction App() {\r\n    const [timer, setTimer] = useState(1234567);\r\n    const [idLapse, setIdLapse] = useState(0);\r\n    const [lapses, setLapses] = useState([12345,2345,34567,98765]);\r\n\r\n    //const [lapses, setLapses] = useState([]);\r\n\r\n    const [isStarted, setStart] = useState(false);\r\n    // const [stop, setStop] = useState(false);\r\n    const [resume, setResume] = useState(false);\r\n\r\n\r\n    let Lap = lapse => {\r\n        setIdLapse(idLapse + 1);\r\n        setLapses([lapse, ...lapses]);\r\n    };\r\n\r\n    // let handleReset = () => {\r\n    //     setStart(false);\r\n    //     setStop(false);\r\n    //     setResume(false);\r\n    //     setIdLapse(0);\r\n    //     setLapses([]);\r\n    // };\r\n\r\n    let handleStart = () => {\r\n        setStart(!isStarted)\r\n    };\r\n\r\n    // let buttons = () => {\r\n    //     if (true) {\r\n    //         {\r\n    //          return (<div>\r\n    //                 <startButton onStart={() => handleStart()}/>\r\n    //             </div>);\r\n    //         }\r\n    //     }\r\n    //     else {\r\n    //         return (<div>\r\n    //             <twoButtons resume={resume} onReset={() => this.handleReset()}\r\n    //                         onLap={() => this.Lap()} idLapse={idLapse}\r\n    //             />\r\n    //         </div>);\r\n    //     }\r\n    // };\r\n\r\n    // let buttons = () => {\r\n    //     if (true) {\r\n    //         return (<div>\r\n    //             <twoButtons resume={resume} onReset={() => this.handleReset()}\r\n    //                         onLap={() => this.Lap()} idLapse={idLapse}\r\n    //             />\r\n    //         </div>);\r\n    //     } else {\r\n    //         return (<div>\r\n    //             <startButton onStart={() => handleStart()}/>\r\n    //         </div>);\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"Timer\">\r\n                <Timer interval={timer}/>\r\n            </div>\r\n\r\n             <div className=\"Buttons twoButtons\">\r\n                 <Button class={\"startButton\"} title=\"START\" />\r\n                 <Button class={\"resetButton\"} title={\"RESET\"} />\r\n            </div>\r\n        </div>\r\n       );\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n/*//import logo from \"../logo.svg\"*/"]},"metadata":{},"sourceType":"module"}
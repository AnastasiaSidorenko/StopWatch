{"ast":null,"code":"import _slicedToArray from \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport moment from 'moment'; //function Clock\n// function startButton(props){\n//         return(\n//         <button onClick={this.props.handleStart} className=\"startButton\"> START </button>\n//         );\n// }\n//\n// function twoButtons(props){\n//     let makeLapse = () => {\n//         this.props.onLap({\n//             id: this.props.idLapse + 1,\n//             end_time: \"tatata\",\n//             duration: \"tatata\",\n//         });\n//     };\n//\n//         return (\n//     (this.props.resume === true)? <div><button>STOP</button><button onClick={this.makeLapse}>LAP</button></div>\n//     : <div><button>RESUME</button><button onClick={this.props.onReset}>RESET</button></div>\n//     );\n// }\n\nfunction LapsesTable() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        start = _useState2[0],\n        setStart = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stop = _useState4[0],\n        setStop = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        resume = _useState6[0],\n        setResume = _useState6[1]; // const [idLapse, setIdLapse] = useState(0);\n  //\n  // const [lapses, setLapses] = useState([]);\n  //\n  // let Lap = lapse => {\n  //     setIdLapse(idLapse + 1);\n  //     setLapses([lapse, ...lapses]);\n  // };\n\n  /* let handleReset = () => {\r\n       setStart(false);\r\n       setStop(false);\r\n       setResume(false);\r\n       setIdLapse(0);\r\n       setLapses([]);\r\n   };*/\n\n  /*return (\r\n      ({start} === false ?\r\n          <div>\r\n              <startButton onClick={() => setStart(!start)}/>\r\n          </div> :\r\n          <div>\r\n              <twoButtons onReset={() => this.handleReset()}\r\n                          onLap={() => this.Lap()} idLapse={idLapse}\r\n                />\r\n              <div className={LapsesList}>\r\n                  <hr/>\r\n                  {lapses.map(lapse => (\r\n                      <Lapse\r\n                          key={lapse.id}\r\n                          lapse={lapse}\r\n                      />\r\n                  ))}\r\n              </div>\r\n          </div>)\r\n  );*/\n\n}\n\n;\n\nfunction twoButtons(props) {\n  let makeLapse = () => {\n    this.props.onLap({\n      id: this.props.idLapse + 1,\n      end_time: \"tatata\",\n      duration: \"tatata\"\n    });\n  };\n\n  return this.props.resume === true ? React.createElement(\"div\", {\n    className: \"twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"stopButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"STOP\"), React.createElement(\"button\", {\n    onClick: this.makeLapse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"LAP\")) : React.createElement(\"div\", {\n    className: \"twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"RESUME\"), React.createElement(\"button\", {\n    onClick: this.props.onReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"RESET\"));\n}\n\nfunction Lapse(props) {\n  return React.createElement(\"div\", {\n    className: \"Lapse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, props.number), React.createElement(Timer, {\n    interval: props.end_time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(Timer, {\n    interval: props.duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }));\n}\n\nfunction LapsesList(props) {\n  return React.createElement(\"div\", {\n    className: LapsesList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), props.lapses.map((lapse, index) => React.createElement(Lapse // lapse = {lapse}\n  , {\n    end_time: lapse.end_time,\n    duration: lapse.duration,\n    key: props.lapses.length - index,\n    number: props.lapses.length - index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })));\n}\n\nfunction Timer({\n  interval\n}) {\n  const _useState7 = useState(moment.duration(interval)),\n        _useState8 = _slicedToArray(_useState7, 2),\n        duration = _useState8[0],\n        setDuration = _useState8[1];\n\n  useEffect(() => setDuration(moment.duration(interval)), [interval]); //const milliseconds = Math.floor(duration.milliseconds() /10);\n\n  const pad = n => n < 10 ? \"0\" + n : n; //const milliseconds = pad()\n\n\n  const milliseconds = Math.round(duration.milliseconds() / 10);\n\n  const seconds = () => {\n    if (duration.seconds() < 10) {\n      return \"0\" + duration.seconds();\n    } else {\n      return duration.seconds();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, pad(duration.minutes()), \":\", pad(duration.seconds()), \".\", pad(milliseconds));\n}\n\nfunction StartButton(props) {\n  return React.createElement(\"button\", {\n    onClick: props.onStart,\n    className: \"startButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \" START \");\n} // function rButton(props){\n//     return(\n//         <button onClick={props.onPress} className={props.class}>{props.title}</button>\n//     )\n// }\n\n\nfunction App() {\n  // const [timer, setTimer] = useState(1234567);\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        idLapse = _useState10[0],\n        setIdLapse = _useState10[1];\n\n  const _useState11 = useState([{\n    end_time: 12345,\n    duration: 1234\n  }, {\n    end_time: 12345,\n    duration: 2345\n  }, {\n    end_time: 12345,\n    duration: 34567\n  }]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        lapses = _useState12[0],\n        setLapses = _useState12[1];\n\n  const _useState13 = useState(0),\n        _useState14 = _slicedToArray(_useState13, 2),\n        now = _useState14[0],\n        setNow = _useState14[1];\n\n  const _useState15 = useState(0),\n        _useState16 = _slicedToArray(_useState15, 2),\n        start = _useState16[0],\n        setStart = _useState16[1]; // let interval = () => {\n  //     if(now === 0 & start!==0){\n  //         return\n  //     }\n  // }\n  //const [interval,setInterv] = useState(Number(now)-Number(start));\n  //const [lapses, setLapses] = useState([]);\n  //const [isStarted, setStart] = useState(false);\n\n\n  const _useState17 = useState(\"no\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        isStopped = _useState18[0],\n        setStop = _useState18[1];\n\n  useEffect(() => isStopped === \"true\" ? handleStop() : setStop(\"no\"), isStopped); // useEffect(() => {\n  //         if(isStopped===\"no\" && start!==0){\n  //             let running = setInterval(() => {\n  //                 setNow(new Date().getTime());\n  //             }, 80);\n  //         }\n  //         else {\n  //             clearInterval();\n  //         }\n  //     });\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        resume = _useState20[0],\n        setResume = _useState20[1];\n\n  let addLapse = lapse => {\n    setLapses([...lapses, lapse]);\n  };\n\n  let Lap = lapse => {\n    setIdLapse(idLapse + 1);\n    setLapses([...lapses, lapse]);\n  }; // let handleReset = () => {\n  //     setStart(false);\n  //     setStop(false);\n  //     setResume(false);\n  //     setIdLapse(0);\n  //     setLapses([]);\n  // };\n\n\n  let handleStart = () => {\n    setStart(new Date().getTime());\n    setNow(new Date().getTime());\n    setLapses([{\n      end_time: 0,\n      duration: 0\n    }]); //setNow(new Date().getTime());\n\n    let running = setInterval(() => {\n      setNow(new Date().getTime());\n\n      if (isStopped === \"yes\") {\n        clearInterval(running);\n      }\n    }, 80); // setInterval(() => {\n    //     setNow(new Date().getTime());\n    // }, 80);\n  };\n\n  let handleStop = () => {\n    setStop(\"yes\");\n  };\n\n  let timer = () => {\n    setInterval(() => {\n      setNow(new Date().getTime());\n    }, 80);\n  }; // let buttons = () => {\n  //     if (true) {\n  //         {\n  //          return (<div>\n  //                 <startButton onStart={() => handleStart()}/>\n  //             </div>);\n  //         }\n  //     }\n  //     else {\n  //         return (<div>\n  //             <twoButtons resume={resume} onReset={() => this.handleReset()}\n  //                         onLap={() => this.Lap()} idLapse={idLapse}\n  //             />\n  //         </div>);\n  //     }\n  // };\n  // let buttons = () => {\n  //     if (true) {\n  //         return (<div>\n  //             <twoButtons resume={resume} onReset={() => this.handleReset()}\n  //                         onLap={() => this.Lap()} idLapse={idLapse}\n  //             />\n  //         </div>);\n  //     } else {\n  //         return (<div>\n  //             <startButton onStart={() => handleStart()}/>\n  //         </div>);\n  //     }\n  // };\n\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Timer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(Timer, {\n    interval: Number(now) - Number(start),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  })), start !== 0 ? React.createElement(\"div\", {\n    className: \"Buttons twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"lapButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"LAP\"), React.createElement(\"button\", {\n    onClick: () => handleStop(),\n    className: \"stopButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, \"STOP\")) : React.createElement(\"div\", {\n    className: \"Buttons twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => handleStart(),\n    className: \"startButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"START\"), React.createElement(\"button\", {\n    className: \"resetButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, \"RESET\")), React.createElement(LapsesList, {\n    lapses: lapses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }));\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 282\n  },\n  __self: this\n}), document.getElementById(\"root\"));\n/*//import logo from \"../logo.svg\"*/","map":{"version":3,"sources":["C:\\Элия\\React\\my-app\\src\\index.js"],"names":["React","useState","useEffect","ReactDOM","moment","LapsesTable","start","setStart","stop","setStop","resume","setResume","twoButtons","props","makeLapse","onLap","id","idLapse","end_time","duration","onReset","Lapse","number","LapsesList","lapses","map","lapse","index","length","Timer","interval","setDuration","pad","n","milliseconds","Math","round","seconds","minutes","StartButton","onStart","App","setIdLapse","setLapses","now","setNow","isStopped","handleStop","addLapse","Lap","handleStart","Date","getTime","running","setInterval","clearInterval","timer","Number","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport moment from 'moment';\r\n\r\n//function Clock\r\n\r\n// function startButton(props){\r\n//         return(\r\n//         <button onClick={this.props.handleStart} className=\"startButton\"> START </button>\r\n//         );\r\n// }\r\n//\r\n// function twoButtons(props){\r\n//     let makeLapse = () => {\r\n//         this.props.onLap({\r\n//             id: this.props.idLapse + 1,\r\n//             end_time: \"tatata\",\r\n//             duration: \"tatata\",\r\n//         });\r\n//     };\r\n//\r\n//         return (\r\n//     (this.props.resume === true)? <div><button>STOP</button><button onClick={this.makeLapse}>LAP</button></div>\r\n//     : <div><button>RESUME</button><button onClick={this.props.onReset}>RESET</button></div>\r\n//     );\r\n// }\r\n\r\nfunction LapsesTable() {\r\n    const [start, setStart] = useState(false);\r\n    const [stop, setStop] = useState(false);\r\n    const [resume, setResume] = useState(false);\r\n\r\n    // const [idLapse, setIdLapse] = useState(0);\r\n    //\r\n    // const [lapses, setLapses] = useState([]);\r\n    //\r\n    // let Lap = lapse => {\r\n    //     setIdLapse(idLapse + 1);\r\n    //     setLapses([lapse, ...lapses]);\r\n    // };\r\n\r\n   /* let handleReset = () => {\r\n        setStart(false);\r\n        setStop(false);\r\n        setResume(false);\r\n        setIdLapse(0);\r\n        setLapses([]);\r\n    };*/\r\n\r\n    /*return (\r\n        ({start} === false ?\r\n            <div>\r\n                <startButton onClick={() => setStart(!start)}/>\r\n            </div> :\r\n            <div>\r\n                <twoButtons onReset={() => this.handleReset()}\r\n                            onLap={() => this.Lap()} idLapse={idLapse}\r\n\r\n                />\r\n                <div className={LapsesList}>\r\n                    <hr/>\r\n                    {lapses.map(lapse => (\r\n                        <Lapse\r\n                            key={lapse.id}\r\n                            lapse={lapse}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>)\r\n    );*/\r\n};\r\n\r\nfunction twoButtons(props){\r\n    let makeLapse = () => {\r\n        this.props.onLap({\r\n            id: this.props.idLapse + 1,\r\n            end_time: \"tatata\",\r\n            duration: \"tatata\",\r\n        });\r\n    };\r\n\r\n    return (\r\n        (this.props.resume === true)?\r\n            <div className=\"twoButtons\">\r\n                <button className=\"stopButton\">STOP</button>\r\n                <button onClick={this.makeLapse}>LAP</button>\r\n            </div>\r\n            :\r\n            <div className=\"twoButtons\">\r\n                <button>RESUME</button>\r\n                <button onClick={this.props.onReset}>RESET</button>\r\n            </div>\r\n    );\r\n}\r\n\r\nfunction Lapse(props){\r\n    return (\r\n        <div className=\"Lapse\">\r\n            <span>{props.number}</span>\r\n            <Timer interval={props.end_time}/>\r\n            <Timer interval={props.duration}/>\r\n            {/*<span>{props.lapse.end_time}</span>*/}\r\n            {/*<span>{props.lapse.duration}</span>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction LapsesList(props) {\r\n    return (\r\n        <div className={LapsesList}>\r\n            <hr/>\r\n            {props.lapses.map((lapse, index) => (\r\n                <Lapse\r\n                    // lapse = {lapse}\r\n                    end_time = {lapse.end_time}\r\n                    duration = {lapse.duration}\r\n                    key = {props.lapses.length - index}\r\n                    number = {props.lapses.length - index}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Timer({interval}) {\r\n    const [duration, setDuration] = useState(moment.duration(interval));\r\n    useEffect(() => setDuration(moment.duration(interval)), [interval]);\r\n    //const milliseconds = Math.floor(duration.milliseconds() /10);\r\n    const pad = (n) => n < 10 ? \"0\" + n : n ;\r\n    //const milliseconds = pad()\r\n    const milliseconds = Math.round(duration.milliseconds() / 10);\r\n    const seconds = () => {\r\n        if(duration.seconds()<10){\r\n            return \"0\"+duration.seconds();\r\n        }\r\n        else{\r\n            return duration.seconds();\r\n        }\r\n    };\r\n    return (\r\n        <div>{pad(duration.minutes())}:{pad(duration.seconds())}.{pad(milliseconds)}</div>\r\n    )\r\n}\r\n\r\nfunction StartButton(props){\r\n    return(\r\n        <button onClick={props.onStart} className=\"startButton\"> START </button>\r\n    );\r\n}\r\n\r\n// function rButton(props){\r\n//     return(\r\n//         <button onClick={props.onPress} className={props.class}>{props.title}</button>\r\n//     )\r\n// }\r\n\r\nfunction App() {\r\n    // const [timer, setTimer] = useState(1234567);\r\n    const [idLapse, setIdLapse] = useState(0);\r\n    const [lapses, setLapses] = useState([{end_time:12345,duration:1234},{end_time:12345,duration:2345},{end_time:12345,duration:34567}]);\r\n    const [now, setNow] = useState(0);\r\n    const [start, setStart] = useState(0);\r\n    // let interval = () => {\r\n    //     if(now === 0 & start!==0){\r\n    //         return\r\n    //     }\r\n    // }\r\n    //const [interval,setInterv] = useState(Number(now)-Number(start));\r\n    //const [lapses, setLapses] = useState([]);\r\n\r\n    //const [isStarted, setStart] = useState(false);\r\n    const [isStopped, setStop] = useState(\"no\");\r\n    useEffect(() => ((isStopped===\"true\")? handleStop(): setStop(\"no\")), isStopped);\r\n    // useEffect(() => {\r\n    //         if(isStopped===\"no\" && start!==0){\r\n    //             let running = setInterval(() => {\r\n    //                 setNow(new Date().getTime());\r\n    //             }, 80);\r\n    //         }\r\n    //         else {\r\n    //             clearInterval();\r\n    //         }\r\n    //     });\r\n    const [resume, setResume] = useState(false);\r\n\r\n    let addLapse = lapse => {\r\n        setLapses([...lapses,lapse]);\r\n    };\r\n\r\n    let Lap = lapse => {\r\n        setIdLapse(idLapse + 1);\r\n        setLapses([...lapses,lapse]);\r\n    };\r\n\r\n    // let handleReset = () => {\r\n    //     setStart(false);\r\n    //     setStop(false);\r\n    //     setResume(false);\r\n    //     setIdLapse(0);\r\n    //     setLapses([]);\r\n    // };\r\n    let handleStart = () => {\r\n        setStart(new Date().getTime());\r\n        setNow(new Date().getTime());\r\n        setLapses([{end_time: 0, duration: 0}]);\r\n        //setNow(new Date().getTime());\r\n        let running = setInterval(() => {\r\n            setNow(new Date().getTime());\r\n            if(isStopped === \"yes\"){\r\n                clearInterval(running);\r\n            }\r\n        }, 80);\r\n            // setInterval(() => {\r\n            //     setNow(new Date().getTime());\r\n            // }, 80);\r\n    };\r\n\r\n    let handleStop = () => {\r\n        setStop(\"yes\");\r\n    };\r\n\r\n    let timer = () => {\r\n        setInterval(() => {\r\n            setNow(new Date().getTime());\r\n        }, 80);\r\n    };\r\n\r\n    // let buttons = () => {\r\n    //     if (true) {\r\n    //         {\r\n    //          return (<div>\r\n    //                 <startButton onStart={() => handleStart()}/>\r\n    //             </div>);\r\n    //         }\r\n    //     }\r\n    //     else {\r\n    //         return (<div>\r\n    //             <twoButtons resume={resume} onReset={() => this.handleReset()}\r\n    //                         onLap={() => this.Lap()} idLapse={idLapse}\r\n    //             />\r\n    //         </div>);\r\n    //     }\r\n    // };\r\n\r\n    // let buttons = () => {\r\n    //     if (true) {\r\n    //         return (<div>\r\n    //             <twoButtons resume={resume} onReset={() => this.handleReset()}\r\n    //                         onLap={() => this.Lap()} idLapse={idLapse}\r\n    //             />\r\n    //         </div>);\r\n    //     } else {\r\n    //         return (<div>\r\n    //             <startButton onStart={() => handleStart()}/>\r\n    //         </div>);\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"Timer\">\r\n                <Timer interval={Number(now)-Number(start)} />\r\n            </div>\r\n            { (start!== 0)?\r\n                (<div className=\"Buttons twoButtons\">\r\n                    <button className=\"lapButton\">LAP</button>\r\n                    <button onClick={()=>handleStop()} className=\"stopButton\">STOP</button>\r\n                </div>)\r\n                :\r\n                (<div className=\"Buttons twoButtons\">\r\n                    <button onClick={()=>handleStart()} className=\"startButton\">START</button>\r\n                    <button className=\"resetButton\">RESET</button>\r\n                </div> )\r\n            }\r\n            <LapsesList lapses={lapses} />\r\n        </div>\r\n       );\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n/*//import logo from \"../logo.svg\"*/"]},"metadata":{},"sourceType":"module"}
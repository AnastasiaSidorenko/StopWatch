{"ast":null,"code":"import _slicedToArray from \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport moment from 'moment'; //function Clock\n// function startButton(props){\n//         return(\n//         <button onClick={this.props.handleStart} className=\"startButton\"> START </button>\n//         );\n// }\n//\n// function twoButtons(props){\n//     let makeLapse = () => {\n//         this.props.onLap({\n//             id: this.props.idLapse + 1,\n//             end_time: \"tatata\",\n//             duration: \"tatata\",\n//         });\n//     };\n//\n//         return (\n//     (this.props.resume === true)? <div><button>STOP</button><button onClick={this.makeLapse}>LAP</button></div>\n//     : <div><button>RESUME</button><button onClick={this.props.onReset}>RESET</button></div>\n//     );\n// }\n\nfunction LapsesTable() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        start = _useState2[0],\n        setStart = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stop = _useState4[0],\n        setStop = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        resume = _useState6[0],\n        setResume = _useState6[1]; // const [idLapse, setIdLapse] = useState(0);\n  //\n  // const [lapses, setLapses] = useState([]);\n  //\n  // let Lap = lapse => {\n  //     setIdLapse(idLapse + 1);\n  //     setLapses([lapse, ...lapses]);\n  // };\n\n  /* let handleReset = () => {\r\n       setStart(false);\r\n       setStop(false);\r\n       setResume(false);\r\n       setIdLapse(0);\r\n       setLapses([]);\r\n   };*/\n\n  /*return (\r\n      ({start} === false ?\r\n          <div>\r\n              <startButton onClick={() => setStart(!start)}/>\r\n          </div> :\r\n          <div>\r\n              <twoButtons onReset={() => this.handleReset()}\r\n                          onLap={() => this.Lap()} idLapse={idLapse}\r\n                />\r\n              <div className={LapsesList}>\r\n                  <hr/>\r\n                  {lapses.map(lapse => (\r\n                      <Lapse\r\n                          key={lapse.id}\r\n                          lapse={lapse}\r\n                      />\r\n                  ))}\r\n              </div>\r\n          </div>)\r\n  );*/\n\n}\n\n;\n\nfunction twoButtons(props) {\n  let makeLapse = () => {\n    this.props.onLap({\n      id: this.props.idLapse + 1,\n      end_time: \"tatata\",\n      duration: \"tatata\"\n    });\n  };\n\n  return this.props.resume === true ? React.createElement(\"div\", {\n    className: \"twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"stopButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"STOP\"), React.createElement(\"button\", {\n    onClick: this.makeLapse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"LAP\")) : React.createElement(\"div\", {\n    className: \"twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"RESUME\"), React.createElement(\"button\", {\n    onClick: this.props.onReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"RESET\"));\n}\n\nfunction Lapse(props) {\n  return React.createElement(\"div\", {\n    className: \"Lapse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Lapse \", props.number), React.createElement(Timer, {\n    interval: props.end_time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(Timer, {\n    interval: props.duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"deleteButton\",\n    onClick: props.onDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"x \"));\n}\n\nfunction LapsesList(props) {\n  return React.createElement(\"div\", {\n    className: \"LapsesList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, props.lapses.map((lapse, index) => React.createElement(Lapse // lapse = {lapse}\n  , {\n    end_time: lapse.end_time,\n    duration: lapse.duration,\n    key: props.lapses.length - index,\n    number: props.lapses.length - index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })));\n}\n\nfunction Timer({\n  interval\n}) {\n  const _useState7 = useState(moment.duration(interval)),\n        _useState8 = _slicedToArray(_useState7, 2),\n        duration = _useState8[0],\n        setDuration = _useState8[1];\n\n  useEffect(() => setDuration(moment.duration(interval)), [interval]); //const milliseconds = Math.floor(duration.milliseconds() /10);\n\n  const pad = n => n < 10 ? \"0\" + n : n; //const milliseconds = pad()\n\n\n  const milliseconds = Math.round(duration.milliseconds() / 10);\n\n  const seconds = () => {\n    if (duration.seconds() < 10) {\n      return \"0\" + duration.seconds();\n    } else {\n      return duration.seconds();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, pad(duration.minutes()), \":\", pad(duration.seconds()), \".\", pad(milliseconds));\n}\n\nfunction StartButton(props) {\n  return React.createElement(\"button\", {\n    onClick: props.onStart,\n    className: \"startButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \" START \");\n} // function rButton(props){\n//     return(\n//         <button onClick={props.onPress} className={props.class}>{props.title}</button>\n//     )\n// }\n\n\nfunction useInterval(handler, interval) {\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        intervalId = _useState10[0],\n        setIntervalId = _useState10[1];\n\n  useEffect(() => {\n    const id = setInterval(handler, interval);\n    setIntervalId(id);\n    return () => clearInterval(id);\n  }, []);\n  return () => clearInterval(intervalId);\n}\n\nfunction App() {\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        lapses = _useState12[0],\n        setLapses = _useState12[1];\n\n  const _useState13 = useState(0),\n        _useState14 = _slicedToArray(_useState13, 2),\n        now = _useState14[0],\n        setNow = _useState14[1];\n\n  const _useState15 = useState(0),\n        _useState16 = _slicedToArray(_useState15, 2),\n        start = _useState16[0],\n        setStart = _useState16[1];\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        isStopped = _useState18[0],\n        setStop = _useState18[1];\n\n  let interval = +now - +start;\n\n  const _useState19 = useState(null),\n        _useState20 = _slicedToArray(_useState19, 2),\n        myInterval = _useState20[0],\n        setMyInterval = _useState20[1];\n\n  useEffect(() => {\n    if (isStopped) {\n      clearInterval(myInterval);\n    } else if (start > 0) {\n      const id = setInterval(() => {\n        setNow(new Date().getTime());\n      }, 80);\n      setMyInterval(id);\n    }\n\n    return () => clearInterval(timer);\n  }, [isStopped]);\n\n  let timer = () => {\n    setInterval(() => {\n      setNow(new Date().getTime());\n    }, 80);\n  };\n\n  const _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        resume = _useState22[0],\n        setResume = _useState22[1];\n\n  let addLapse = () => {\n    const timestamp = new Date().getTime();\n    let duration;\n    lapses.length > 0 ? duration = timestamp - (lapses[0][\"end_time\"] + start) : duration = timestamp - start;\n    setLapses([{\n      end_time: timestamp - start,\n      duration: duration\n    }, ...lapses]);\n    setStop(false);\n  }; // let handleReset = () => {\n  //     setStart(false);\n  //     setStop(false);\n  //     setResume(false);\n  //     setIdLapse(0);\n  //     setLapses([]);\n  // let handleInterval() => {\n  //     const stopInterval = useInterval(handleInterval, 1000);\n  // };\n\n\n  let handleStart = () => {\n    setStart(new Date().getTime());\n    setNow(new Date().getTime());\n    setStop(false); //  setLapses([{end_time: 0, duration: 0}]);\n    //setNow(new Date().getTime());\n    // setInterval(() => {\n    //     setNow(new Date().getTime());\n    // }, 80);\n    // setMyInterval(setInterval(() => {\n    //   setNow(new Date().getTime());\n    //  }, 80));\n  };\n\n  let handleResume = () => {\n    setNow(new Date().getTime() + interval);\n    setStart(new Date().getTime());\n    setStop(false);\n  };\n\n  let handleReset = () => {\n    setNow(0);\n    setStart(0);\n    setStop(false);\n    setLapses([]);\n  };\n\n  let handleStop = () => {\n    // clearInterval(myInterval);\n    //  setNow(0);\n    //  setStart(0);\n    setStop(true);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Timer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, React.createElement(Timer, {\n    interval: interval,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  })), start > 0 ? React.createElement(\"div\", {\n    className: \"Buttons twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => addLapse(),\n    className: \"lapButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, \"LAP\"), React.createElement(\"button\", {\n    onClick: () => handleStop(),\n    className: \"stopButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, \"STOP\")) : isStopped ? React.createElement(\"div\", {\n    className: \"Buttons twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => handleStart(),\n    className: \"startButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"START\"), React.createElement(\"button\", {\n    onClick: () => handleReset(),\n    className: \"resetButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, \"RESET\")) : React.createElement(\"div\", {\n    className: \"Buttons twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => handleResume(),\n    className: \"startButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"RESUME\"), React.createElement(\"button\", {\n    onClick: () => handleReset(),\n    className: \"resetButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"RESET\")), React.createElement(LapsesList, {\n    lapses: lapses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }));\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 285\n  },\n  __self: this\n}), document.getElementById(\"root\"));\n/*//import logo from \"../logo.svg\"*/","map":{"version":3,"sources":["C:\\Элия\\React\\my-app\\src\\index.js"],"names":["React","useState","useEffect","useRef","ReactDOM","moment","LapsesTable","start","setStart","stop","setStop","resume","setResume","twoButtons","props","makeLapse","onLap","id","idLapse","end_time","duration","onReset","Lapse","number","onDelete","LapsesList","lapses","map","lapse","index","length","Timer","interval","setDuration","pad","n","milliseconds","Math","round","seconds","minutes","StartButton","onStart","useInterval","handler","intervalId","setIntervalId","setInterval","clearInterval","App","setLapses","now","setNow","isStopped","myInterval","setMyInterval","Date","getTime","timer","addLapse","timestamp","handleStart","handleResume","handleReset","handleStop","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect , useRef} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport moment from 'moment';\r\n\r\n//function Clock\r\n\r\n// function startButton(props){\r\n//         return(\r\n//         <button onClick={this.props.handleStart} className=\"startButton\"> START </button>\r\n//         );\r\n// }\r\n//\r\n// function twoButtons(props){\r\n//     let makeLapse = () => {\r\n//         this.props.onLap({\r\n//             id: this.props.idLapse + 1,\r\n//             end_time: \"tatata\",\r\n//             duration: \"tatata\",\r\n//         });\r\n//     };\r\n//\r\n//         return (\r\n//     (this.props.resume === true)? <div><button>STOP</button><button onClick={this.makeLapse}>LAP</button></div>\r\n//     : <div><button>RESUME</button><button onClick={this.props.onReset}>RESET</button></div>\r\n//     );\r\n// }\r\n\r\nfunction LapsesTable() {\r\n    const [start, setStart] = useState(false);\r\n    const [stop, setStop] = useState(false);\r\n    const [resume, setResume] = useState(false);\r\n\r\n    // const [idLapse, setIdLapse] = useState(0);\r\n    //\r\n    // const [lapses, setLapses] = useState([]);\r\n    //\r\n    // let Lap = lapse => {\r\n    //     setIdLapse(idLapse + 1);\r\n    //     setLapses([lapse, ...lapses]);\r\n    // };\r\n\r\n   /* let handleReset = () => {\r\n        setStart(false);\r\n        setStop(false);\r\n        setResume(false);\r\n        setIdLapse(0);\r\n        setLapses([]);\r\n    };*/\r\n\r\n    /*return (\r\n        ({start} === false ?\r\n            <div>\r\n                <startButton onClick={() => setStart(!start)}/>\r\n            </div> :\r\n            <div>\r\n                <twoButtons onReset={() => this.handleReset()}\r\n                            onLap={() => this.Lap()} idLapse={idLapse}\r\n\r\n                />\r\n                <div className={LapsesList}>\r\n                    <hr/>\r\n                    {lapses.map(lapse => (\r\n                        <Lapse\r\n                            key={lapse.id}\r\n                            lapse={lapse}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>)\r\n    );*/\r\n};\r\n\r\nfunction twoButtons(props){\r\n    let makeLapse = () => {\r\n        this.props.onLap({\r\n            id: this.props.idLapse + 1,\r\n            end_time: \"tatata\",\r\n            duration: \"tatata\",\r\n        });\r\n    };\r\n\r\n    return (\r\n        (this.props.resume === true)?\r\n            <div className=\"twoButtons\">\r\n                <button className=\"stopButton\">STOP</button>\r\n                <button onClick={this.makeLapse}>LAP</button>\r\n            </div>\r\n            :\r\n            <div className=\"twoButtons\">\r\n                <button>RESUME</button>\r\n                <button onClick={this.props.onReset}>RESET</button>\r\n            </div>\r\n    );\r\n}\r\n\r\nfunction Lapse(props){\r\n    return (\r\n        <div className=\"Lapse\">\r\n            <span>Lapse {props.number}</span>\r\n            <Timer interval={props.end_time}/>\r\n            <Timer interval={props.duration}/>\r\n            <button className=\"deleteButton\" onClick={props.onDelete}>x </button>\r\n            {/*<span>{props.lapse.end_time}</span>*/}\r\n            {/*<span>{props.lapse.duration}</span>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction LapsesList(props) {\r\n    return (\r\n        <div className=\"LapsesList\">\r\n            {/*<hr/>*/}\r\n            {props.lapses.map((lapse, index) => (\r\n                <Lapse\r\n                    // lapse = {lapse}\r\n                    end_time = {lapse.end_time}\r\n                    duration = {lapse.duration}\r\n                    key = {props.lapses.length - index}\r\n                    number = {props.lapses.length - index}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Timer({interval}) {\r\n    const [duration, setDuration] = useState(moment.duration(interval));\r\n    useEffect(() => setDuration(moment.duration(interval)), [interval]);\r\n    //const milliseconds = Math.floor(duration.milliseconds() /10);\r\n    const pad = (n) => n < 10 ? \"0\" + n : n ;\r\n    //const milliseconds = pad()\r\n    const milliseconds = Math.round(duration.milliseconds() / 10);\r\n    const seconds = () => {\r\n        if(duration.seconds()<10){\r\n            return \"0\"+duration.seconds();\r\n        }\r\n        else{\r\n            return duration.seconds();\r\n        }\r\n    };\r\n    return (\r\n        <div>{pad(duration.minutes())}:{pad(duration.seconds())}.{pad(milliseconds)}</div>\r\n    )\r\n}\r\n\r\nfunction StartButton(props){\r\n    return(\r\n        <button onClick={props.onStart} className=\"startButton\"> START </button>\r\n    );\r\n}\r\n\r\n// function rButton(props){\r\n//     return(\r\n//         <button onClick={props.onPress} className={props.class}>{props.title}</button>\r\n//     )\r\n// }\r\n\r\n\r\nfunction useInterval(handler, interval) {\r\n    const [intervalId, setIntervalId] = useState(0);\r\n    useEffect(() => {\r\n        const id = setInterval(handler, interval);\r\n        setIntervalId(id);\r\n        return () => clearInterval(id);\r\n    }, []);\r\n    return () => clearInterval(intervalId);\r\n}\r\n\r\nfunction App() {\r\n    const [lapses, setLapses] = useState([]);\r\n    const [now, setNow] = useState(0);\r\n    const [start, setStart] = useState(0);\r\n    const [isStopped, setStop] = useState(false);\r\n\r\n    let interval = +now-(+start);\r\n    const [myInterval, setMyInterval] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (isStopped) {\r\n            clearInterval(myInterval);\r\n        }\r\n        else if(start > 0){\r\n            const id = setInterval(() => {\r\n                setNow(new Date().getTime());\r\n            }, 80);\r\n            setMyInterval(id);\r\n        }\r\n        return () => clearInterval(timer);\r\n    }, [isStopped]);\r\n\r\n    let timer = () => {\r\n        setInterval(() => {\r\n            setNow(new Date().getTime());\r\n        }, 80);\r\n    };\r\n\r\n    const [resume, setResume] = useState(false);\r\n\r\n    let addLapse = () => {\r\n        const timestamp = new Date().getTime();\r\n        let duration;\r\n        lapses.length > 0 ? duration = timestamp - (lapses[0][\"end_time\"] + start)\r\n        : duration = timestamp - start;\r\n        setLapses([{end_time:timestamp-start,duration:duration},...lapses]);\r\n        setStop(false);\r\n    };\r\n\r\n    // let handleReset = () => {\r\n    //     setStart(false);\r\n    //     setStop(false);\r\n    //     setResume(false);\r\n    //     setIdLapse(0);\r\n    //     setLapses([]);\r\n\r\n    // let handleInterval() => {\r\n    //     const stopInterval = useInterval(handleInterval, 1000);\r\n    // };\r\n\r\n    let handleStart = () => {\r\n        setStart(new Date().getTime());\r\n        setNow(new Date().getTime());\r\n        setStop(false);\r\n      //  setLapses([{end_time: 0, duration: 0}]);\r\n        //setNow(new Date().getTime());\r\n\r\n        // setInterval(() => {\r\n        //     setNow(new Date().getTime());\r\n        // }, 80);\r\n\r\n        // setMyInterval(setInterval(() => {\r\n        //   setNow(new Date().getTime());\r\n        //  }, 80));\r\n    };\r\n\r\n    let handleResume = () => {\r\n      setNow(new Date().getTime()+interval);\r\n      setStart(new Date().getTime());\r\n      setStop(false);\r\n    };\r\n\r\n    let handleReset = () => {\r\n        setNow(0);\r\n        setStart(0);\r\n        setStop(false);\r\n        setLapses([]);\r\n    };\r\n\r\n    let handleStop = () => {\r\n       // clearInterval(myInterval);\r\n       //  setNow(0);\r\n       //  setStart(0);\r\n        setStop(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"Timer\">\r\n                <Timer interval={interval} />\r\n            </div>\r\n            { (start > 0)?\r\n                (<div className=\"Buttons twoButtons\">\r\n                    <button onClick={()=>addLapse()} className=\"lapButton\">LAP</button>\r\n                    <button onClick={()=>handleStop()} className=\"stopButton\">STOP</button>\r\n                </div>)\r\n                :\r\n                (isStopped)?\r\n                    (<div className=\"Buttons twoButtons\">\r\n                        <button onClick={()=>handleStart()} className=\"startButton\">START</button>\r\n                        <button onClick={()=>handleReset()} className=\"resetButton\">RESET</button>\r\n                    </div> )\r\n                    :\r\n                    (<div className=\"Buttons twoButtons\">\r\n                            <button onClick={()=>handleResume()} className=\"startButton\">RESUME</button>\r\n                            <button onClick={()=>handleReset()} className=\"resetButton\">RESET</button>\r\n                    </div>\r\n                    )\r\n            }\r\n            <LapsesList lapses={lapses} />\r\n        </div>\r\n       );\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n/*//import logo from \"../logo.svg\"*/"]},"metadata":{},"sourceType":"module"}